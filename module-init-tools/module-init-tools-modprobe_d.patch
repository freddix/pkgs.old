--- module-init-tools-3.16/modprobe.c.org	2011-08-15 18:27:47.961488079 +0200
+++ module-init-tools-3.16/modprobe.c	2011-08-15 18:28:35.239355945 +0200
@@ -86,6 +86,8 @@
 
 } modprobe_flags_t;
 
+char *modprobe_d_ver = NULL;
+
 #ifndef MODULE_DIR
 #define MODULE_DIR "/lib/modules"
 #endif
@@ -1333,19 +1335,27 @@
 			while ((i = readdir(dir)) != NULL) {
 				size_t len;
 				int cmp = -1;
+				struct stat statbuf;
+				char statpath[PATH_MAX];
 
 				if (i->d_name[0] == '.')
 					continue;
 				if (!config_filter(i->d_name))
 					continue;
 
+				snprintf(statpath, sizeof(statpath), "%s/%s", filename, i->d_name);
+				if ((stat(statpath, &statbuf) == 0) && (S_ISDIR(statbuf.st_mode)))
+					continue;
+
 				len = strlen(i->d_name);
 				if (len < 6 ||
 				    (strcmp(&i->d_name[len-5], ".conf") != 0 &&
-				     strcmp(&i->d_name[len-6], ".alias") != 0))
+				     strcmp(&i->d_name[len-6], ".alias") != 0)) {
 					warn("All config files need .conf: %s/%s, "
-					     "it will be ignored in a future release.\n",
+					     "Ignoring non conformant file.\n",
 					     filename, i->d_name);
+					continue;
+				}
 				fe = malloc(sizeof(struct file_entry));
 				if (fe == NULL)
 					continue;
@@ -1428,7 +1438,7 @@
 	/* default config */
 	parse_config_scan(conf, dump_only, removing, "/run/modprobe.d",
 			  "/etc/modprobe.d", "/usr/local/lib/modprobe.d",
-			  "/lib/modprobe.d", NULL);
+			  "/lib/modprobe.d", modprobe_d_ver, NULL);
 }
 
 /**
@@ -2234,6 +2244,7 @@
 		print_usage(argv[0]);
 
 	nofail_asprintf(&dirname, "%s%s/%s", basedir, MODULE_DIR, buf.release);
+	nofail_asprintf(&modprobe_d_ver, "/etc/modprobe.d/%s", buf.release);
 
 	/* Old-style -t xxx wildcard?  Only with -l. */
 	if (list_only) {
