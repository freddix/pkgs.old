#
# Upstream: https://bugs.freedesktop.org/show_bug.cgi?id=11786
#
Index: consolekit-0.3/src/ck-manager.c
===================================================================
--- consolekit-0.3.orig/src/ck-manager.c	2008-09-23 20:56:46.000000000 +0200
+++ consolekit-0.3/src/ck-manager.c	2008-09-23 21:23:47.000000000 +0200
@@ -30,6 +30,13 @@
 #include <sys/types.h>
 #include <errno.h>
 #include <pwd.h>
+ #ifdef HAVE_PATHS_H
+ #include <paths.h>
+ #endif /* HAVE_PATHS_H */
+ 
+ #ifndef _PATH_TTY
+ #define _PATH_TTY "/dev/tty"
+ #endif
 
 #include <glib.h>
 #include <glib/gi18n.h>
@@ -2370,6 +2377,41 @@
         CkManager  *manager;
 } RemoveLeaderData;
 
+gboolean
+ck_manager_set_x11_parking_place (CkManager             *manager,
+				  const char            *x11display,
+				  const char            *x11displaydevice,
+				  DBusGMethodInvocation *context)
+{
+        CkSeat  *seat;
+	guint    num;
+	gboolean res = FALSE;
+
+	g_debug ("x11display=%s device=%s", x11display, x11displaydevice);
+	
+	seat = g_hash_table_lookup (manager->priv->seats,
+				    CK_DBUS_PATH "/Seat1");
+	/* FIXME: this is rather unpleasantly hardcoded, but it
+	 * mirrors the code in find_seat_for_session - iwj */
+	if (seat == NULL) {
+		g_debug ("no seat");
+		goto xit;
+	}
+
+	if (sscanf (x11displaydevice, _PATH_TTY "%u", &num) != 1) {
+		g_debug ("bad device");
+		goto xit;
+	}
+
+	ck_seat_set_park_vt (seat, num);
+	res = TRUE;
+
+xit:
+        dbus_g_method_return (context, res);
+
+	return TRUE;
+}
+
 static gboolean
 remove_leader_for_connection (const char       *cookie,
                               CkSessionLeader  *leader,
Index: consolekit-0.3/src/ck-manager.h
===================================================================
--- consolekit-0.3.orig/src/ck-manager.h	2008-09-23 20:56:46.000000000 +0200
+++ consolekit-0.3/src/ck-manager.h	2008-09-23 21:23:47.000000000 +0200
@@ -94,6 +94,10 @@
 gboolean            ck_manager_close_session                  (CkManager             *manager,
                                                                const char            *cookie,
                                                                DBusGMethodInvocation *context);
+gboolean            ck_manager_set_x11_parking_place          (CkManager             *manager,
+                                                               const char            *x11display,
+                                                               const char            *x11displaydevice,
+                                                               DBusGMethodInvocation *context);
 gboolean            ck_manager_get_current_session            (CkManager             *manager,
                                                                DBusGMethodInvocation *context);
 gboolean            ck_manager_get_session_for_cookie         (CkManager             *manager,
Index: consolekit-0.3/src/ck-seat.c
===================================================================
--- consolekit-0.3.orig/src/ck-seat.c	2008-09-23 20:56:46.000000000 +0200
+++ consolekit-0.3/src/ck-seat.c	2008-09-23 21:23:47.000000000 +0200
@@ -61,6 +61,8 @@
         CkSession       *active_session;
 
         CkVtMonitor     *vt_monitor;
+	guint           vt_park_num;
+        gboolean        vt_park_enable;
 
         DBusGConnection *connection;
 };
@@ -498,9 +500,17 @@
                 g_object_ref (session);
                 ck_session_get_id (session, &ssid, NULL);
                 ck_session_set_active (session, TRUE, NULL);
+		g_debug ("Active session changed: %s", ssid);
+         } else if (seat->priv->vt_park_enable) {
+		ck_seat_park (seat);
+		g_debug ("Active session: none - parking");
+	} else {
+                g_debug ("Active session: none and no parking");
         }
 
-        g_debug ("Active session changed: %s", ssid ? ssid : "(null)");
+        /* We park only once: enable is set when a session exits
+         * and cleared here when we choose a new session. */
+        seat->priv->vt_park_enable = FALSE;
 
         g_signal_emit (seat, signals [ACTIVE_SESSION_CHANGED], 0, ssid);
 
@@ -549,6 +559,33 @@
         return TRUE;
 }
 
+void
+ck_seat_park (CkSeat *seat)
+{
+        GError       *vt_error;
+	guint         num;
+	gboolean      ret;
+
+	num = seat->priv->vt_park_num;
+	g_debug ("Parking on VT %u", num);
+	if (num < 0) return;
+
+        vt_error = NULL;
+        ret = ck_vt_monitor_set_active (seat->priv->vt_monitor, num, &vt_error);
+	if (! ret) {
+                g_debug ("Unable to park: %s", vt_error->message);
+                g_error_free (vt_error);
+        }
+}
+
+void
+ck_seat_set_park_vt (CkSeat *seat, guint num)
+{
+	g_debug ("Parking place is VT %u", num);
+	
+	seat->priv->vt_park_num = num;
+}
+
 gboolean
 ck_seat_remove_session (CkSeat         *seat,
                         CkSession      *session,
@@ -592,6 +629,7 @@
         g_signal_emit (seat, signals [SESSION_REMOVED], 0, ssid);
 
         /* try to change the active session */
+        seat->priv->vt_park_enable = TRUE;
         maybe_update_active_session (seat);
 
         if (orig_session != NULL) {
@@ -988,6 +1026,8 @@
                                                       g_str_equal,
                                                       g_free,
                                                       (GDestroyNotify) g_object_unref);
+        seat->priv->vt_park_num = -1;
+        seat->priv->vt_park_enable = FALSE;
         seat->priv->devices = g_ptr_array_new ();
 }
 
Index: consolekit-0.3/src/ck-seat.h
===================================================================
--- consolekit-0.3.orig/src/ck-seat.h	2008-09-23 20:56:46.000000000 +0200
+++ consolekit-0.3/src/ck-seat.h	2008-09-23 21:23:47.000000000 +0200
@@ -133,6 +133,9 @@
 gboolean            ck_seat_activate_session      (CkSeat                *seat,
                                                    const char            *ssid,
                                                    DBusGMethodInvocation *context);
+void                ck_seat_park                  (CkSeat                *seat);
+void                ck_seat_set_park_vt           (CkSeat                *seat,
+						   guint                  num);
 
 G_END_DECLS
 
Index: consolekit-0.3/src/org.freedesktop.ConsoleKit.Manager.xml
===================================================================
--- consolekit-0.3.orig/src/org.freedesktop.ConsoleKit.Manager.xml	2008-09-23 21:23:55.000000000 +0200
+++ consolekit-0.3/src/org.freedesktop.ConsoleKit.Manager.xml	2008-09-23 21:24:01.000000000 +0200
@@ -133,6 +133,12 @@
       </doc:doc>
     </method>
 
+    <method name="SetX11ParkingPlace">
+      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
+      <arg name="x11display" direction="in" type="s"/>
+      <arg name="x11displaydevice" direction="in" type="s"/>
+    </method>
+
     <method name="GetSeats">
       <arg name="seats" direction="out" type="ao">
         <doc:doc>
