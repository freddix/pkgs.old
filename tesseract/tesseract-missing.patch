--- tesseract-3.00/configure.ac.orig	1970-01-01 01:00:00.000000000 +0100
+++ tesseract-3.00/configure.ac	2010-11-14 20:43:34.455103290 +0100
@@ -0,0 +1,436 @@
+# -*-Shell-script-*-
+#
+# Copyright (c) Luc Vincent
+
+# ----------------------------------------
+# Initialization
+# ----------------------------------------
+
+AC_PREREQ(2.50)
+AC_CONFIG_MACRO_DIR([m4])
+AC_INIT(tesseract, 3.00, theraysmith@gmail.com)
+AC_REVISION($Id: configure.ac,v 1.4 2007/02/02 22:38:17 theraysmith Exp $)
+AC_CONFIG_AUX_DIR(config)
+AC_CONFIG_SRCDIR(api/tesseractmain.cpp)
+AC_PREFIX_DEFAULT(/usr/local)
+AC_CANONICAL_HOST
+
+# Define date of package, etc. Could be useful in auto-generated
+# documentation.
+# TODO(luc) Generate good documentation using doxygen or equivalent
+PACKAGE_YEAR=2010
+PACKAGE_DATE="09/30"
+
+AC_DEFINE_UNQUOTED(PACKAGE_NAME,["${PACKAGE_NAME}"],[Name of package])
+AC_DEFINE_UNQUOTED(PACKAGE_VERSION,["${PACKAGE_VERSION}"],[Version number])
+AC_DEFINE_UNQUOTED(PACKAGE_YEAR,"$PACKAGE_YEAR",[Official year for this release])
+AC_DEFINE_UNQUOTED(PACKAGE_DATE,"$PACKAGE_DATE",[Official date of release])
+
+AC_SUBST(PACKAGE_NAME)
+AC_SUBST(PACKAGE_VERSION)
+AC_SUBST(PACKAGE_YEAR)
+AC_SUBST(PACKAGE_DATE)
+
+GENERIC_LIBRARY_NAME=tesseract
+
+# Release versioning
+GENERIC_MAJOR_VERSION=3
+GENERIC_MINOR_VERSION=0
+GENERIC_MICRO_VERSION=0
+
+# API version (often = GENERIC_MAJOR_VERSION.GENERIC_MINOR_VERSION)
+GENERIC_API_VERSION=$GENERIC_MAJOR_VERSION.$GENERIC_MINOR_VERSION
+GENERIC_LIBRARY_VERSION=$GENERIC_MAJOR_VERSION:$GENERIC_MINOR_VERSION
+AC_SUBST(GENERIC_API_VERSION)
+AC_SUBST(GENERIC_MAJOR_VERSION)
+
+AC_SUBST(GENERIC_LIBRARY_VERSION)
+PACKAGE=$GENERIC_LIBRARY_NAME
+AC_SUBST(GENERIC_LIBRARY_NAME)
+
+GENERIC_VERSION=$GENERIC_MAJOR_VERSION.$GENERIC_MINOR_VERSION.$GENERIC_MICRO_VERSION
+GENERIC_RELEASE=$GENERIC_MAJOR_VERSION.$GENERIC_MINOR_VERSION
+AC_SUBST(GENERIC_RELEASE)
+AC_SUBST(GENERIC_VERSION)
+
+includedir="${includedir}/tesseract"
+
+AC_ARG_WITH(extra-includes,
+            AC_HELP_STRING([--with-extra-includes=DIR],
+                       [Define an additional directory for include files]),
+        [ if test -d "$withval" ; then
+            CFLAGS="$CFLAGS -I$withval"
+          else
+            AC_MSG_ERROR([Cannot stat directory $withval])
+          fi ] )
+
+AC_ARG_WITH(extra-libraries,
+            AC_HELP_STRING([--with-extra-libraries=DIR],
+                       [Define an additional directory for library files]),
+        [ if test -d "$withval" ; then
+           LDFLAGS="$LDFLAGS -L$withval"
+          else
+            AC_MSG_ERROR([Cannot stat directory $withval])
+          fi ] )
+
+AC_MSG_CHECKING(--enable-graphics argument)
+AC_ARG_ENABLE([graphics],
+    [  --enable-graphics         Enable graphics (ScrollView) (default).],
+    [enable_graphics=$enableval],
+    [enable_graphics="yes"])
+AC_MSG_RESULT($enable_graphics)
+if test "$enable_graphics" = "no"; then
+  AC_DEFINE([DISABLE_GRAPHICS], [], [Disable graphics])
+fi
+
+localedir='${prefix}/share/locale'
+
+# Not used yet, so disable
+#AC_ARG_ENABLE([gettext],
+#    [  --enable-gettext         Enable gettext (default).],
+#    [enable_gettext=$enableval],
+#    [enable_gettext="yes"])
+#AC_MSG_RESULT($enable_gettext)
+#if test "$enable_gettext" = "yes"; then
+#  AM_GNU_GETTEXT_VERSION([0.17])
+#  AM_GNU_GETTEXT([external])  
+#  AC_SUBST(localedir)
+#else
+#  AC_DEFINE([NO_GETTEXT], [], [Disable Gettext])
+#fi
+#AM_CONDITIONAL([USING_GETTEXT], [test "$enable_gettext" = "yes"])
+
+# Always look into a "gnu" directory.
+curwd=`pwd`
+if test -d $curwd/gnu/include ; then
+   CPPFLAGS="$CPPFLAGS -I$curwd/gnu/include"
+fi
+if test -d $curwd/gnu/lib ; then
+   LDFLAGS="$LDFLAGS -L$curwd/gnu/lib"
+fi
+
+# Special cases
+case "$host" in
+  *-darwin* | *-macos10*)
+     if test -d /opt/local ; then
+       CPPFLAGS="$CPPFLAGS -I/opt/local/include"
+       LDFLAGS="$LDFLAGS -L/opt/local/lib"
+     elif test -d /sw ; then
+       CPPFLAGS="$CPPFLAGS -I/sw/include"
+       LDFLAGS="$LDFLAGS -L/sw/lib"
+     fi
+  ;;
+esac
+
+# ----------------------------------------
+# Check Compiler Characteristics and
+# configure automake. The two appear to
+# be intimately linked...
+# ----------------------------------------
+
+# Define order of compilers
+AC_PROG_CXX(cl.exe g++)
+# Not needed
+# AC_PROG_CC
+
+AC_PROG_LIBTOOL
+
+# Automake configuration
+# ----------------------------------------
+
+# Note: may need to configure automake to use ZIP as a distribution
+# format because of an apparent bug with GZIP, which results in bogus
+# archives.
+# TODO(luc) Resolve this issue.
+#AM_INIT_AUTOMAKE(dist-zip)
+AM_INIT_AUTOMAKE
+AM_CONFIG_HEADER(config_auto.h:config/config.h.in)
+#AM_PROG_CC_C_O
+AM_MAINTAINER_MODE
+# Need to tell automake if Visual C++ is being used:
+AM_CONDITIONAL(USING_CL, test x$CC = xcl.exe)
+
+# Additional checking of compiler characteristics
+# ----------------------------------------
+
+# Check Endianness. If Big Endian, this will define WORDS_BIGENDIAN
+# See also at end of this file, where we define INTEL_BYTE_ORDER
+# or MOTOROLA_BYTE_ORDER.
+AC_C_BIGENDIAN
+
+
+# ----------------------------------------
+# Check for programs we need
+# ----------------------------------------
+
+# Check where all the following programs are and set
+# variables accordingly:
+LT_INIT
+# AC_PROG_LN_S
+# AC_PATH_PROG(MV, mv)
+# AC_PATH_PROG(CP, cp)
+# AC_PATH_PROG(RM, rm)
+# AC_PATH_PROG(AR, ar)
+# AC_PATH_PROG(TOUCH, touch)
+# AC_PATH_PROG(SED, sed)
+# AC_PATH_PROG(BASH, bash, ,[$PATH:/usr/bin:/util/tools/bin])
+# # To use substitution in makefiles, use something like:
+# AC_SUBST(BASH)
+
+# TODO(luc) Handle documentation. None of the following
+# is really needed until then
+#
+# AC_PROG_DOXYGEN_VERSION(1.3.2,[DOXYGEN_OK=1])
+# AC_PATH_PROG(DOT, dot)
+# AC_PATH_PROG(LATEX, latex)
+# AC_PATH_PROG(DVIPS, dvips)
+# AC_PATH_PROG(MAKEINDEX, makeindex)
+# AC_PATH_PROG(PDFLATEX, pdflatex)
+# AC_PATH_PROG(GZIP, gzip)
+#
+# if test -z "$DOXYGEN_OK" -o -z "$DOT"; then
+#   AC_MSG_WARN([------------------------------------
+# *** Disabling automatic documentation generation for this
+# *** package. Please check that you have 'doxygen' (version
+# *** $ac_doxygen_version or later) and 'graphviz' (aka, 'dot')
+# *** installed on your system. In addition, to generate
+# *** PostScript and PDF documentation, you will need to have
+# *** LaTeX and PdfLaTeX respectively. Re-run this configuration
+# *** script after you have updated your environment.
+# --------------------------------------------------------])
+#
+# # We have appropriate version of doxygen and dot, so we
+# # can generate documentation. It remains to be seen whether
+# # we can generate PDF and PostScript documentation..
+# else
+#   GENERATE_DOCUMENTATION="true"
+#
+# # Determine if PostScript documentation is generated:
+#   if test -z "$LATEX" -o -z "$DVIPS" -o -z "$MAKEINDEX"; then
+#     AC_MSG_WARN([Disabling generation of PostScript documentation])
+#   else
+#     GENERATE_PS_DOCUMENTATION="true"
+#   fi
+#
+#   # Determine if PDF documentation is generated:
+#   if test -z "$PDFLATEX" -o -z "$MAKEINDEX"; then
+#     AC_MSG_WARN([Disabling generation of PDF documentation])
+#   else
+#     GENERATE_PDF_DOCUMENTATION="true"
+#   fi
+# fi
+#
+# # These substitutions could be inside the 'else'
+# # conditionals above, but it is not necessary and would
+# # only cause some confusion...
+# AC_SUBST(DOXYGEN)
+# AC_SUBST(DOT)
+# AC_SUBST(LATEX)
+# AC_SUBST(DVIPS)
+# AC_SUBST(MAKEINDEX)
+# AC_SUBST(PDFLATEX)
+# AC_SUBST(GZIP)
+#
+# # Adjust makefiles based on the kind of documentation that
+# # is being generated,
+# AM_CONDITIONAL(GENERATE_DOCUMENTATION, test -n "$GENERATE_DOCUMENTATION")
+# AM_CONDITIONAL(GENERATE_PS_DOCUMENTATION, test -n "$GENERATE_PS_DOCUMENTATION")
+# AM_CONDITIONAL(GENERATE_PDF_DOCUMENTATION, test -n "$GENERATE_PDF_DOCUMENTATION")
+
+
+# Test for GNUWIN32 tools (only useful under windows)
+# AC_PATH_GNUWIN32
+
+# ----------------------------------------
+# C++ related options
+# ----------------------------------------
+
+AC_LANG_CPLUSPLUS
+
+# Enable --enable-debug or --disable-debug and set
+# compile options accordingly. We are supposed to be either
+# in debug mode or in optimize mode. Note that in debug mode,
+# DEBUG_MODE will be set by this macro
+# AC_CXX_OPTIMIZE
+# AC_CXX_BOOL
+# AC_CXX_TYPENAME
+# AC_CXX_STDINCLUDES
+# AC_CXX_RPO
+
+# ----------------------------------------
+# Check for libraries
+# ----------------------------------------
+
+# This option seems to always add -lm to the link line,
+# which causes unnecessary warnings with Visual C++.
+# Comment it out for now.
+#AC_CHECK_LIB(m,sqrt)
+AC_CHECK_LIB(z,deflate)
+AC_CHECK_LIB(png,png_read_png)
+AC_CHECK_LIB(jpeg,jpeg_read_scanlines)
+AC_CHECK_LIB(pthread,sem_init)
+
+# ----------------------------------------
+# Checks for header files.
+# ----------------------------------------
+
+AC_HEADER_STDC
+AC_HEADER_TIME
+AC_HEADER_SYS_WAIT
+AC_CHECK_HEADERS(sys/ipc.h sys/shm.h)
+AC_CHECK_HEADERS(limits.h malloc.h)
+AC_CHECK_HEADERS(allheaders.h)
+# Enable use of system-defined bool type if available:
+AC_HEADER_STDBOOL
+
+# Misc
+AC_SYS_INTERPRETER
+AC_SYS_LARGEFILE
+
+
+# ----------------------------------------
+# Checks for typedefs, structures, and compiler characteristics.
+# ----------------------------------------
+
+AC_CHECK_TYPES(wchar_t)
+AC_CHECK_TYPES(long long int)
+AC_CHECK_TYPES(mbstate_t,,,[#include "wchar.h"])
+
+#AC_TYPE_MODE_T
+#AC_TYPE_OFF_T
+AC_TYPE_SIZE_T
+#AC_TYPE_PID_T
+
+
+# ----------------------------------------
+# Checks for library functions.
+# ----------------------------------------
+
+AC_FUNC_MMAP
+AC_FUNC_FORK
+AC_CHECK_FUNCS(strerror vsnprintf)
+AC_CHECK_FUNCS(gethostname)
+AC_CHECK_FUNCS(strchr memcpy)
+AC_CHECK_FUNCS(acos asin)
+
+# ----------------------------------------
+# Test auxilliary packages
+# ----------------------------------------
+
+# Search JPEG library - not needed at the moment
+# AC_PATH_JPEG(,
+# [ no_jpeg=yes
+#   AC_MSG_WARN([JPEG support is disabled]) ])
+
+# Search LIBTIFF library
+AC_PATH_LIBTIFF(,
+[ no_libtiff=yes
+  AC_MSG_WARN([TIFF support is disabled]) ])
+
+# Check location of leptonica/liblept headers.
+have_lept=no
+for incd in /usr/local/include /usr/include
+do
+  for lept in . leptonica liblept
+  do
+    if test -r "$incd/$lept/allheaders.h" ; then
+      CPPFLAGS="$CPPFLAGS -I$incd/$lept"
+      have_lept=yes
+    fi
+  done
+done
+if test "$have_lept" = yes ; then
+AC_CHECK_LIB(lept,pixCreate)
+fi
+
+
+# ----------------------------------------
+# Final Tasks and Output
+# ----------------------------------------
+
+# Define installation paths
+# AC_DEFINE_INSTALL_PATHS
+# Redundant with PACKAGE_VERSION - comment out
+# AC_DEFINE_UNQUOTED(TESSERACT_VERSION,["${PACKAGE_VERSION}"],[version string])
+
+# Output files
+AC_CONFIG_FILES(Makefile)
+#if test "$enable_gettext" = "yes"; then
+#AC_CONFIG_FILES(po/Makefile.in)
+#fi
+AC_CONFIG_FILES(api/Makefile)
+AC_CONFIG_FILES(ccmain/Makefile)
+AC_CONFIG_FILES(ccstruct/Makefile)
+AC_CONFIG_FILES(ccutil/Makefile)
+AC_CONFIG_FILES(classify/Makefile)
+AC_CONFIG_FILES(cutil/Makefile)
+AC_CONFIG_FILES(dict/Makefile)
+AC_CONFIG_FILES(image/Makefile)
+AC_CONFIG_FILES(textord/Makefile)
+AC_CONFIG_FILES(viewer/Makefile)
+AC_CONFIG_FILES(wordrec/Makefile)
+AC_CONFIG_FILES(training/Makefile)
+AC_CONFIG_FILES(tessdata/Makefile)
+AC_CONFIG_FILES(tessdata/configs/Makefile)
+AC_CONFIG_FILES(tessdata/tessconfigs/Makefile)
+AC_CONFIG_FILES(testing/Makefile)
+AC_CONFIG_FILES(vs2008/Makefile)
+AC_CONFIG_FILES(vs2008/dlltest/Makefile)
+AC_CONFIG_FILES(vs2008/include/Makefile)
+AC_CONFIG_FILES(vs2008/include/leptonica/Makefile)
+if test "$enable_graphics" = "yes"; then
+AC_CONFIG_FILES(java/Makefile)
+AC_CONFIG_FILES(java/com/Makefile)
+AC_CONFIG_FILES(java/com/google/Makefile)
+AC_CONFIG_FILES(java/com/google/scrollview/Makefile)
+AC_CONFIG_FILES(java/com/google/scrollview/events/Makefile)
+AC_CONFIG_FILES(java/com/google/scrollview/ui/Makefile)
+fi
+# AC_CONFIG_FILES(doc/Doxyfile)
+# AC_CONFIG_FILES(doc/header.html)
+# AC_CONFIG_FILES(doc/footer.html)
+# AC_CONFIG_FILES(doc/header.tex)
+# AC_CONFIG_FILES(doc/RTF_ExtensionFile)
+# AC_CONFIG_FILES(doc/Makefile)
+AC_OUTPUT
+
+# Final message
+echo ""
+echo "Configuration is done."
+echo "You can now build $PACKAGE_NAME by running:"
+# test x$GXX = xyes && \
+# echo "% make depend  [optional]"
+echo ""
+echo "% make"
+
+# ----------------------------------------
+# CONFIG Template
+# ----------------------------------------
+
+# Fence added in configuration file
+AH_TOP([
+#ifndef CONFIG_AUTO_H
+#define CONFIG_AUTO_H
+/* config_auto.h: begin */
+])
+
+# Stuff added at bottom of file
+AH_BOTTOM([
+
+/* Miscellaneous defines */
+#define AUTOCONF 1
+
+#ifdef DISABLE_GRAPHICS
+#define GRAPHICS_DISABLED
+#endif
+
+/* Not used yet
+#ifndef NO_GETTEXT
+#define USING_GETTEXT
+#endif
+*/
+
+/* config_auto.h: end */
+#endif
+])
+
--- tesseract-3.00/acinclude.m4.orig	1970-01-01 01:00:00.000000000 +0100
+++ tesseract-3.00/acinclude.m4	2010-11-14 20:50:19.967101613 +0100
@@ -0,0 +1,156 @@
+dnl ------------------------------------------------------------------
+dnl @synopsis AC_PATH_LIBTIFF([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])
+dnl Process option --with-libtiff.
+dnl Search LIBTIFF along the extra
+dnl Define HAVE_LIBTIFF.
+dnl Set output variable LIBTIFF_CFLAGS and LIBTIFF_LIBS
+dnl -- inspired from previous AC_PATH_JPEG
+dnl ------------------------------------------------------------------
+AC_DEFUN([AC_PATH_LIBTIFF],
+[
+  AC_REQUIRE([AC_CANONICAL_HOST])
+  case $host in
+    *msdos* | *go32* | *mingw32* | *cygwin* | *windows*)
+      USING_WIN=yes
+      ;;
+    *)
+      USING_WIN=no
+  esac
+  AC_ARG_VAR(LIBTIFF_LIBS,[Tiff library to link against])
+  AC_ARG_VAR(LIBTIFF_CFLAGS,[Compile flags needed for TIFF support])
+  ac_libtiff=no
+  AC_ARG_WITH(libtiff,
+     AC_HELP_STRING([--with-libtiff=DIR],
+                    [where the www.libtiff.org libtiff library is located]),
+     [ac_libtiff=$withval], [ac_libtiff=yes] )
+  AC_MSG_CHECKING([for Leffler libtiff library])
+  # Need to define TOP_SRCDIR for the cases where the LIBTIFF library
+  # is checked in with the code, at the top-level
+  TOP_SRCDIR=`cd $srcdir; pwd`
+  LOCAL_LIBTIFFDIR=$TOP_SRCDIR/libtiff
+  # First of all, deal with the case when 'cl.exe' is used as compiler
+  # indeed, when this is the case, we can only rely on finding
+  # the right library and includes, but we can't try compiling
+  # and linking. In addition, library needs to be specifically
+  # supplied on the link line and special flags are needed...
+  if test "x$CXX" = "xcl.exe" ; then
+    if test "x$ac_libtiff" = "xyes" ; then
+      # If LIBTIFF_LIBS has been set on configure command line
+      # or as environment variable, just use it if it exists
+      if test "x$LIBTIFF_LIBS" != "x" ; then
+        AC_MSG_RESULT(user specified as $LIBTIFF_LIBS)
+        if test "x$LIBTIFF_CFLAGS" = "x" ; then
+          AC_MSG_WARN(LIBTIFF_CFLAGS is empty)
+        fi
+      fi
+      # Otherwise, test if libtiff is at top level directory, under libtiff
+      if test "x$LIBTIFF_LIBS" = "x" && test -r "$LOCAL_LIBTIFFDIR/lib/libtiff.a" && test -r "$LOCAL_LIBTIFFDIR/lib/libjpeg.a" && test -r "$LOCAL_LIBTIFFDIR/lib/libz.a" ; then
+        AC_MSG_RESULT($LOCAL_LIBTIFFDIR/lib/libtiff.a)
+        LIBTIFF_LIBS="$LOCAL_LIBTIFFDIR/lib/libtiff.a $LOCAL_LIBTIFFDIR/lib/libjpeg.a $LOCAL_LIBTIFFDIR/lib/libz.a user32.lib"
+        LIBTIFF_CFLAGS="-I$LOCAL_LIBTIFFDIR/include"
+      fi
+      # Otherwise, if GnuWin32 was previously located
+      if test "x$LIBTIFF_LIBS" = "x" && test -r "$GNUWIN32_BASE/lib/libtiff.a" && test -r "$GNUWIN32_BASE/lib/libjpeg.a" && test -r "$GNUWIN32_BASE/lib/libz.a" ; then
+        AC_MSG_RESULT($GNUWIN32_BASE/lib/libtiff.a)
+        AC_MSG_WARN($GNUWIN32_BASE/lib/libtiff.a version 3.5.7 works. Some versions like 3.6.1 do not!)
+        LIBTIFF_LIBS="$GNUWIN32_BASE/lib/libtiff.a $GNUWIN32_BASE/lib/libjpeg.a $GNUWIN32_BASE/lib/libz.a user32.lib"
+      fi
+      if test "x$LIBTIFF_LIBS" = "x" ; then
+        AC_MSG_RESULT(not found or incomplete)
+        ac_libtiff=no
+      fi
+    elif test "x$ac_libtiff" != "xno" ; then
+      test x${LIBTIFF_LIBS+set} != xset && LIBTIFF_LIBS="$ac_libtiff/libtiff"
+      test x${LIBTIFF_CFLAGS+set} != xset && LIBTIFF_CFLAGS="-I$ac_libtiff"
+    fi
+  # If we are not using CL, that is we are either using gcc/cygwin
+  # or we are not running under Windows:
+  else
+    # Process specification
+    if test "x$ac_libtiff" = "xyes" ; then
+       if test "x$LIBTIFF_LIBS" = "x" ; then
+          # If local libtiff exists at top level, and we are running windows, use it first:
+          if test "x$USING_WIN" = "xyes" && test -r "$LOCAL_LIBTIFFDIR/lib/libtiff.a" && test -r "$LOCAL_LIBTIFFDIR/lib/libjpeg.a" && test -r "$LOCAL_LIBTIFFDIR/lib/libz.a" ; then
+             AC_MSG_RESULT($LOCAL_LIBTIFFDIR/lib/libtiff.a)
+             LIBTIFF_LIBS="$LOCAL_LIBTIFFDIR/lib/libtiff.a $LOCAL_LIBTIFFDIR/lib/libjpeg.a $LOCAL_LIBTIFFDIR/lib/libz.a -lole32 -luuid -lwsock32"
+             LIBTIFF_CFLAGS="-I$LOCAL_LIBTIFFDIR/include"
+          fi
+          # If GNUWIN32_BASE is defined, it means we are running under
+          # Windows and we should use these builds if available because
+          # they are the best bet
+          if test "x$LIBTIFF_LIBS" = "x" && test "x$GNUWIN32_BASE" != "x" ; then
+             # With version 3.5.7 of gnuwin32 libtiff, we do not need to link
+             # against "$GNUWIN32_BASE/lib/libgw32c.a", so no need to test
+             if test -r "$GNUWIN32_BASE/lib/libtiff.a" && test -r "$GNUWIN32_BASE/lib/libjpeg.a" && test -r "$GNUWIN32_BASE/lib/libz.a" ; then
+                AC_MSG_RESULT($GNUWIN32_BASE/lib/libtiff.a)
+                # With 3.5.7 version of libtiff, no need to add
+                # $GNUWIN32_BASE/lib/libgw32c.a after  $GNUWIN32_BASE/lib/libz.a
+                LIBTIFF_LIBS="$GNUWIN32_BASE/lib/libtiff.a $GNUWIN32_BASE/lib/libjpeg.a $GNUWIN32_BASE/lib/libz.a -lole32 -luuid -lwsock32"
+             else
+                AC_MSG_RESULT([GNUWIN32 not found or incomplete. Trying something else])
+             fi
+          fi
+          # If LIBTIFF_LIBS is still not defined after potentially going
+          # the GNUWIN32 route, then try using home built versions
+          if test "x$LIBTIFF_LIBS" = "x" ; then
+             TIFF_PACKAGE="$HOME_UNIX/packages/libtiff/libtiff"
+             if test -d "$TIFF_PACKAGE" ; then
+                LIBTIFF_LIBS="$TIFF_PACKAGE/libtiff.a"
+                LIBTIFF_CFLAGS="-I$TIFF_PACKAGE"
+             else
+                LIBTIFF_LIBS="-ltiff"
+             fi
+          fi
+       fi
+    elif test "x$ac_libtiff" != "xno" ; then
+       test "x${LIBTIFF_LIBS+set}" != "xset" && LIBTIFF_LIBS="$ac_libtiff/libtiff.a"
+       test "x${LIBTIFF_CFLAGS+set}" != "xset" && LIBTIFF_CFLAGS="-I$ac_libtiff"
+    fi
+    # Try linking - recall that -Wall is typically on, and any warning
+    # will cause this test to fail... This, by the way, is one of the
+    # reasons we cannot run this test when using the Microsoft compiler (cl),
+    # which outputs tons of "garbage" on stdout:
+    if test "x$ac_libtiff" != "xno" ; then
+       AC_MSG_CHECKING([linking with $LIBTIFF_LIBS])
+       save_CFLAGS="$CFLAGS"
+       save_CXXFLAGS="$CXXFLAGS"
+       save_LIBS="$LIBS"
+       CFLAGS="$CFLAGS $LIBTIFF_CFLAGS"
+       CXXFLAGS="$CXXFLAGS $LIBTIFF_CFLAGS"
+       LIBS="$LIBS $LIBTIFF_LIBS -lm"
+       AC_TRY_LINK([
+#ifdef __cplusplus
+extern "C" {
+#endif
+#include <stdio.h>
+#include <tiffio.h>
+#ifdef __cplusplus
+}
+#endif ],[
+TIFFClose((TIFF *) 0);],
+       [ac_libtiff=ok],[ac_libtiff=no])
+       CFLAGS="$save_CFLAGS"
+       CXXFLAGS="$save_CXXFLAGS"
+       LIBS="$save_LIBS"
+       AC_MSG_RESULT($ac_libtiff)
+     fi
+  fi
+  # Finish
+  if test "x$ac_libtiff" = "xno"; then
+     LIBTIFF_CFLAGS= ; LIBTIFF_LIBS=
+     ifelse([$2],,:,[$2])
+  else
+     AC_DEFINE(HAVE_LIBTIFF,1,[Define if you have the www.libtiff.org LIBTIFF library.])
+     AC_MSG_RESULT([setting LIBTIFF_CFLAGS=$LIBTIFF_CFLAGS])
+     AC_MSG_RESULT([setting LIBTIFF_LIBS=$LIBTIFF_LIBS])
+     CFLAGS="$LIBTIFF_CFLAGS $CFLAGS"
+     CXXFLAGS="$LIBTIFF_CFLAGS $CXXFLAGS"
+     if test "x$CXX" = "xcl.exe" ; then
+       LIBS="$LIBTIFF_LIBS $LIBS"
+     else
+       LIBS="$LIBTIFF_LIBS $LIBS -lm"
+     fi
+     ifelse([$1],,:,[$1])
+  fi
+  AM_CONDITIONAL(HAVE_LIBTIFF, test x$ac_libtiff != xno)
+])
